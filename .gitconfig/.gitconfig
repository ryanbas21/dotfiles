[core]
	excludesfile = /Users/batman/.gitignore_global
  editor = 'nvim'
	pager = diff-so-fancy | less --tabs=4 -RFX
[user]
	name = ryanbas21
	email = ryanbas21@gmail.com
	signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIyaFc+QE0WlbpRq0pBkyf3+sQHQbP9CWnrgYkb0Cqr/
[commit]
	template = /Users/batman/.stCommitMsg
[github]
	user = ryanbas21
[alias]

  # list files which have changed since REVIEW_BASE
  # (REVIEW_BASE defaults to 'master' in my zshrc)
  files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")
  # Same as above, but with a diff stat instead of just names
  # (better for interactive use)
  stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")

  # NOTE: These aliases depend on the `git files` alias from
  # a few sections ago!

  # Open all files changed since REVIEW_BASE in Vim tabs
  # Then, run fugitive's :Gdiff in each tab, and finally
  # tell vim-gitgutter to show +/- for changes since REVIEW_BASE
  review = !nvim -p $(git files) +\"tabdo Gvdiffsplit! $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"

  # Same as the above, except specify names of files as arguments,
  # instead of opening all files:
  # git reviewone foo.js bar.js
  reviewone = !nvim -p +\"tabdo Gvdiffsplit! $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"
  depgraph = !git madge image --webpack-config webpack.config.js --basedir . --style solarized-dark src
	log = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  st = status
  po = push origin
  co = checkout
  cob = checkout -b
[color]
	ui = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = yellow
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[diff]
	tool = vimdiff3
[difftool "vimdiff3"]
	path = nvim
[merge]
  ff = only
	tool = vimdiff3
[mergetool "vimdiff3"]
	path = nvim
[gpg]
	program = gpg
[push]
  followTags = true
  showUntrackedFiles = all


