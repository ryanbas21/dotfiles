[projects."/home/programming/system-scripts"]
trust_level = "trusted"

[projects."/home/ryan/dotfiles"]
trust_level = "trusted"

[projects."/home/programming/ci-dashboard"]
trust_level = "trusted"

[projects."/home/programming/nx-release-vp-pr"]
trust_level = "trusted"

[shell_environment_policy]
# inherit can be "all" (default), "core", or "none"
inherit = "all"
# set to true to *skip* the filter for `"*KEY*"` and `"*TOKEN*"`
ignore_default_excludes = true
experimental_use_profile = true

# exclude patterns (case-insensitive globs)
# exclude = ["AWS_*", "AZURE_*"]
# force-set / override values
# set = { CI = "1" }
# if provided, *only* vars matching these patterns are kept
# include_only = ["PATH", "HOME"]

####################################
# MCP servers
####################################

[mcp_servers.chrome-devtools]
command = "npx"
args = ["chrome-devtools-mcp@latest"]

[mcp_servers.context7]
command = "npx"
args = ["-y", "@upstash/context7-mcp", "--api-key", "ctx7sk-6816eb53-38e3-498e-8008-05717da35b34"]

[mcp_servers.effect-mcp]
command = "npx"
args = ["-y", "effect-mcp@latest"]

[mcp_servers.git]
command = "uvx"
args = ["mcp-server-git"]

[mcp_servers.github]
command = "npx"
args = ["mcp-remote", "https://api.githubcopilot.com/mcp/"]
env_key = "$GITHUB_TOKEN"

[mcp_servers.nixos]
command = "nix"
args = ["run", "github:utensils/mcp-nixos"]
env_key = "$GITHUB_TOKEN"

[mcp_servers.package-registry]
command = "npx"
args = ["-y", "package-registry-mcp"]

[mcp_servers.serena]
command = "uvx"
args = ["--from", "git+https://github.com/oraios/serena", "serena", "start-mcp-server"]

[mcp_servers."nx-mcp"]
type = "stdio"
command = "npx"
args = ["nx", "mcp"]
